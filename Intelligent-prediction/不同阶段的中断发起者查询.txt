MATCH (u:Participant)-[:INITIATED_DISRUPTION_OF]->(p:Project)
WHERE p.`结果` IN ['取消','中断，三个月以上','中断，三个月以内']
WITH p,
     CASE
       WHEN p.`中断发生阶段` IS NULL OR trim(p.`中断发生阶段`) = '' OR p.`中断发生阶段` =~ '^[\\s\\-—_]+$' THEN '未标注'
       WHEN p.`中断发生阶段` CONTAINS '开发' THEN '开发'
       WHEN p.`中断发生阶段` CONTAINS '设计' OR p.`中断发生阶段` CONTAINS '建造' OR p.`中断发生阶段` CONTAINS '施工' THEN '设计建造'
       WHEN p.`中断发生阶段` CONTAINS '运营' THEN '运营'
       ELSE p.`中断发生阶段`
     END AS stage,
     coalesce(u.`参与方名称`,'') AS nm
WITH p, stage,
     CASE WHEN nm = '' THEN ['未标注']
          WHEN nm CONTAINS ';' THEN [x IN split(replace(replace(nm,'；',';'), '，中断发起者',''), ';') | trim(x)]
          ELSE [trim(replace(nm,'，中断发起者',''))]
     END AS toks
UNWIND toks AS tok
WITH p, stage,
     CASE
       WHEN tok CONTAINS '政府'                      THEN 'U1-政府'
       WHEN tok CONTAINS '承包商'                    THEN 'U2-承包商'
       WHEN tok CONTAINS '本地社区' OR tok CONTAINS '当地社区' THEN 'U3-本地社区'
       WHEN tok CONTAINS '投资者'                    THEN 'U4-投资者'
       WHEN tok CONTAINS '国际力量'                  THEN 'U5-国际力量'
       WHEN tok CONTAINS '外部因素'                  THEN 'U6-外部因素'
       WHEN tok CONTAINS '环境'                      THEN 'U7-环境'
       ELSE '未标注'
     END AS initiator
WITH p, stage, collect(DISTINCT initiator) AS inits
WITH stage, collect({pid:id(p), inits:inits, k:size(inits)}) AS rows, count(DISTINCT p) AS total_stage
UNWIND rows AS r
UNWIND r.inits AS initiator
WITH stage, initiator, total_stage, 1.0/r.k AS w
WITH stage, initiator, total_stage, sum(w) AS 加权项目数
RETURN stage, initiator,
       round(加权项目数, 3) AS 加权项目数,
       round(100.0 * 加权项目数 / total_stage, 1) AS 百分比_均分
ORDER BY stage, 加权项目数 DESC;
